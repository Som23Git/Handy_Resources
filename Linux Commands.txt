//IMPORTANT

#Find the Performance Metrics in Linux

1. Load Average - The load average is not a percentage, but the rolling average of the sum of the following:
– The number of processes in queue waiting to be processed
– The number of processes waiting for uninterruptable task to be completed
That is, the average of the sum of TASK_RUNNING and TASK_UNINTERRUPTIBLE
processes. If processes that request CPU time are blocked (which means that the CPU
has no time to process them), the load average will increase. On the other hand, if each
process gets immediate access to CPU time and there are no CPU cycles lost, the load
will decrease. 

We can find Load Average using tools -> uptime, and top

uptime will provide load average w.r.t 1 minute, 5 minute, and 15 minute.
Example Output for uptime: 23:48  up 14 days, 14:32, 2 users, load averages: 1.26 1.39 1.64

Where, 1.26 is for 1 min, 1.39 is for 5 mins, and 1.64 is for 15 mins.

Example Output for top:
Processes: 495 total, 2 running, 493 sleeping, 3035 threads                                                                                          23:56:26
Load Avg: 3.00, 3.01, 2.38  CPU usage: 8.22% user, 5.41% sys, 86.35% idle  SharedLibs: 229M resident, 40M data, 16M linkedit.
MemRegions: 341033 total, 1938M resident, 59M private, 987M shared. PhysMem: 8019M used (2625M wired), 171M unused.
VM: 19T vsize, 3100M framework vsize, 8400734604(1085) swapins, 8429573232(0) swapouts. Networks: packets: 177340626/82G in, 161185702/50G out.
Disks: 200372002/32T read, 214737924/32T written.

Where, 3.00, 3.01, 2.38 are for 1, 5, and 15 mins.

Additional Reference: https://www.brendangregg.com/blog/2017-08-08/linux-load-averages.html

Some interpretations:

If the averages are 0.0, then your system is idle.
If the 1 minute average is higher than the 5 or 15 minute averages, then load is increasing.
If the 1 minute average is lower than the 5 or 15 minute averages, then load is decreasing.
If they are higher than your CPU count, then you might have a performance problem (it depends).

2. Runable processes
This value depicts the processes that are ready to be executed. This value should not
exceed 10 times the amount of physical processors for a sustained period of time;
otherwise a processor bottleneck is likely.

3. Blocked
Processes that cannot execute while they are waiting for an I/O operation to finish.
Blocked processes can point you toward an I/O bottleneck.

